---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-canary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-canary
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: web-canary
    spec:
      containers:
      - name: web
        image: brdm88/web:0.1
        resources:
          limits:
            memory: "128Mi"
            cpu: "300m"
        livenessProbe:
          tcpSocket:
            port: 8000
        readinessProbe:
          httpGet:
            path: /index.html
            port: 8000
        volumeMounts:
          - name: app
            mountPath: /app
      initContainers:
        - name: html-gen
          image: busybox:musl
          command: ['sh', '-c', 'echo It is CANARY version > /app/index.html | sh']
          volumeMounts:
            - name: app
              mountPath: /app
      volumes:
        - name: app
          emptyDir: {}


---
apiVersion: v1
kind: Service
metadata:
  name: web-svc-canary
spec:
  selector:
    app: web-canary
  type: ClusterIP
  clusterIP: None
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000


---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: web-canary
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    # Canary deployment config
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-by-header: "X-IsCanary"
    nginx.ingress.kubernetes.io/canary-by-header-value: "true"
    #nginx.ingress.kubernetes.io/canary-weight: "30"
spec:
  rules:
  - host: ingress.local
    http:
      paths:
      - path: /canary
        backend:
          serviceName: web-svc-canary
          servicePort: 8000
